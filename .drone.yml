pipeline:

  build:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker build -t cop-data-api:$${DRONE_COMMIT_SHA} .
    when:
      event: push

  vulnerability-scan:
    image: quay.io/ukhomeofficedigital/anchore-submission:latest
    dockerfile: Dockerfile
    image_name: cop-data-api:${DRONE_COMMIT_SHA}
    local_image: true
    tolerate: low
    fail_on_detection: false
    when:
      branch: master
      event: push

  unit_tests:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker run -t cop-data-api:$${DRONE_COMMIT_SHA} sh -c "npm test"
    when:
      event: push

  lint_checks:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker run -t cop-data-api:$${DRONE_COMMIT_SHA} sh -c "npm run lint -- app/"
    when:
      event: push

  synch_dev_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
      - DEPLOY_ENV=dev
    secrets:
      - source: DEV_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: DEV_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      environment: secrets
      event: deployment

  synch_staging_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
      - DEPLOY_ENV=staging
    secrets:
      - source: STAGING_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: STAGING_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      environment: secrets
      event: deployment

  synch_production_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
      - DEPLOY_ENV=production
    secrets:
      - source: PRODUCTION_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: PRODUCTION_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      environment: secrets
      event: deployment

  image_to_quay:
    image: quay.io/ukhomeofficedigital/drone-docker
    secrets:
    - source: QUAY_PASSWORD
      target: DOCKER_PASSWORD
    - source: QUAY_USERNAME
      target: DOCKER_USERNAME
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/cop-data-api
    tags: ${DRONE_COMMIT_SHA}
    when:
      branch: master
      event: push

  deploy_to_dev:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - source: API_COP_IMAGE
        target: API_COP_IMAGE
      - source: DEV_API_COP_KEYCLOAK_CLIENT_ID
        target: API_COP_KEYCLOAK_CLIENT_ID
      - source: LOG_LEVEL_DEBUG
        target: API_COP_LOG_LEVEL
      - source: DEV_API_COP_NAME
        target: API_COP_NAME
      - source: API_COP_PORT
        target: API_COP_PORT
      - source: PROTOCOL_HTTPS
        target: API_COP_PROTOCOL
      - source: DEV_API_COP_URL
        target: API_COP_URL
      - source: DEV_DB_COP_HOSTNAME
        target: DB_COP_HOSTNAME
      - source: DEV_DB_COP_OPERATION_AUTHENTICATOR_PASSWORD
        target: DB_COP_OPERATION_AUTHENTICATOR_PASSWORD
      - source: DEV_DB_COP_OPERATION_AUTHENTICATOR_USERNAME
        target: DB_COP_OPERATION_AUTHENTICATOR_USERNAME
      - source: DEV_DB_COP_OPERATION_DBNAME
        target: DB_COP_OPERATION_DBNAME
      - source: DEV_DB_COP_OPERATION_SCHEMA
        target: DB_COP_OPERATION_SCHEMA
      - source: DEV_DB_COP_OPTIONS
        target: DB_COP_OPTIONS
      - source: DB_COP_PORT
        target: DB_COP_PORT
      - source: PROTOCOL_POSTGRES
        target: DB_COP_PROTOCOL
      - source: PROTOCOL_HTTPS
        target: KEYCLOAK_PROTOCOL
      - source: DEV_KEYCLOAK_REALM
        target: KEYCLOAK_REALM
      - source: DEV_KEYCLOAK_URL
        target: KEYCLOAK_URL
      - source: DEV_KUBE_NAMESPACE_PRIVATE_COP
        target: KUBE_NAMESPACE
      - source: DEV_KUBE_SERVER
        target: KUBE_SERVER
      - source: DEV_KUBE_TOKEN
        target: KUBE_TOKEN
      - source: NGINX_IMAGE
        target: NGINX_IMAGE
      - source: NGINX_TAG
        target: NGINX_TAG
    commands:
      - export API_COP_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/cert.yml -f kube/deployment.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml
    when:
      branch: master
      event: push

  deploy_to_staging:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - source: API_COP_IMAGE
        target: API_COP_IMAGE
      - source: STAGING_API_COP_KEYCLOAK_CLIENT_ID
        target: API_COP_KEYCLOAK_CLIENT_ID
      - source: LOG_LEVEL_INFO
        target: API_COP_LOG_LEVEL
      - source: STAGING_API_COP_NAME
        target: API_COP_NAME
      - source: API_COP_PORT
        target: API_COP_PORT
      - source: PROTOCOL_HTTPS
        target: API_COP_PROTOCOL
      - source: STAGING_API_COP_URL
        target: API_COP_URL
      - source: STAGING_DB_COP_HOSTNAME
        target: DB_COP_HOSTNAME
      - source: STAGING_DB_COP_OPERATION_AUTHENTICATOR_PASSWORD
        target: DB_COP_OPERATION_AUTHENTICATOR_PASSWORD
      - source: STAGING_DB_COP_OPERATION_AUTHENTICATOR_USERNAME
        target: DB_COP_OPERATION_AUTHENTICATOR_USERNAME
      - source: STAGING_DB_COP_OPERATION_DBNAME
        target: DB_COP_OPERATION_DBNAME
      - source: STAGING_DB_COP_OPERATION_SCHEMA
        target: DB_COP_OPERATION_SCHEMA
      - source: STAGING_DB_COP_OPTIONS
        target: DB_COP_OPTIONS
      - source: DB_COP_PORT
        target: DB_COP_PORT
      - source: PROTOCOL_POSTGRES
        target: DB_COP_PROTOCOL
      - source: PROTOCOL_HTTPS
        target: KEYCLOAK_PROTOCOL
      - source: STAGING_KEYCLOAK_REALM
        target: KEYCLOAK_REALM
      - source: STAGING_KEYCLOAK_URL
        target: KEYCLOAK_URL
      - source: STAGING_KUBE_NAMESPACE_PRIVATE_COP
        target: KUBE_NAMESPACE
      - source: STAGING_KUBE_SERVER
        target: KUBE_SERVER
      - source: STAGING_KUBE_TOKEN
        target: KUBE_TOKEN
      - source: NGINX_IMAGE
        target: NGINX_IMAGE
      - source: NGINX_TAG
        target: NGINX_TAG
    commands:
      - export API_COP_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/cert.yml -f kube/deployment.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml
    when:
      event: deployment
      environment: staging
      branch: master

  deploy_to_production:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - source: API_COP_IMAGE
        target: API_COP_IMAGE
      - source: PRODUCTION_API_COP_KEYCLOAK_CLIENT_ID
        target: API_COP_KEYCLOAK_CLIENT_ID
      - source: LOG_LEVEL_INFO
        target: API_COP_LOG_LEVEL
      - source: PRODUCTION_API_COP_NAME
        target: API_COP_NAME
      - source: API_COP_PORT
        target: API_COP_PORT
      - source: PROTOCOL_HTTPS
        target: API_COP_PROTOCOL
      - source: PRODUCTION_API_COP_URL
        target: API_COP_URL
      - source: PRODUCTION_DB_COP_HOSTNAME
        target: DB_COP_HOSTNAME
      - source: PRODUCTION_DB_COP_OPERATION_AUTHENTICATOR_PASSWORD
        target: DB_COP_OPERATION_AUTHENTICATOR_PASSWORD
      - source: PRODUCTION_DB_COP_OPERATION_AUTHENTICATOR_USERNAME
        target: DB_COP_OPERATION_AUTHENTICATOR_USERNAME
      - source: PRODUCTION_DB_COP_OPERATION_DBNAME
        target: DB_COP_OPERATION_DBNAME
      - source: PRODUCTION_DB_COP_OPERATION_SCHEMA
        target: DB_COP_OPERATION_SCHEMA
      - source: PRODUCTION_DB_COP_OPTIONS
        target: DB_COP_OPTIONS
      - source: DB_COP_PORT
        target: DB_COP_PORT
      - source: PROTOCOL_POSTGRES
        target: DB_COP_PROTOCOL
      - source: PROTOCOL_HTTPS
        target: KEYCLOAK_PROTOCOL
      - source: PRODUCTION_KEYCLOAK_REALM
        target: KEYCLOAK_REALM
      - source: PRODUCTION_KEYCLOAK_URL
        target: KEYCLOAK_URL
      - source: PRODUCTION_KUBE_NAMESPACE_PRIVATE_COP
        target: KUBE_NAMESPACE
      - source: PRODUCTION_KUBE_SERVER
        target: KUBE_SERVER
      - source: PRODUCTION_KUBE_TOKEN
        target: KUBE_TOKEN
      - source: NGINX_IMAGE
        target: NGINX_IMAGE
      - source: NGINX_TAG
        target: NGINX_TAG
    commands:
      - export API_COP_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/cert.yml -f kube/deployment.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml
    when:
      event: deployment
      environment: production
      branch: master

  notify:
    image: plugins/slack
    secrets: [ SLACK_WEBHOOK ]
    channel: cop-deployments
    username: Drone Build Watcher
    template: >
      {{#build.deployTo}}
        *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*
        {{build.link}}
      {{else}}
        *{{repo.name}} - Build {{build.number}} - Development - {{uppercase build.status}}*
        {{build.link}}
      {{/build.deployTo}}
    when:
      branch: master
      event: [ push, deployment ]
      status: [ success, failure ]
