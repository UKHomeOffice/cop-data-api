pipeline:

  build:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker build -t cop-data-api:$${DRONE_COMMIT_SHA} .
    when:
      event: push

  unit_tests:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker run -t cop-data-api:$${DRONE_COMMIT_SHA} sh -c "npm test"
    when:
      event: push

  lint_checks:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker run -t cop-data-api:$${DRONE_COMMIT_SHA} sh -c "npm run lint -- app/"
    when:
      event: push

  image_to_quay:
    image: quay.io/ukhomeofficedigital/drone-docker
    secrets:
      - DOCKER_USERNAME
      - DOCKER_PASSWORD
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/cop-data-api
    tags: ${DRONE_BUILD_NUMBER}
    when:
      branch: master
      event: push

  deploy_to_dev:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - DEV_HOSTNAME
      - DEV_COP_DATA_API_KUBE_NAMESPACE
      - DEV_KUBE_SERVER
      - DEV_KUBE_TOKEN
      - DEV_KEYCLOAK_URL
      - DEV_KEYCLOAK_PROTOCOL
      - DEV_KEYCLOAK_REALM
      - DEV_COP_DATA_API_KEYCLOAK_CLIENT_ID
      - DEV_COP_DATA_API_LOG_LEVEL
      - DEV_COP_DATA_API_DB_CONNECTION_STRING
      - DEV_DB_DATA_COP_OPERATION_SCHEMA
      - DEV_COP_DATA_API_IMAGE_REPO
      - DEV_COP_DATA_API_PORT
      - DEV_NGINX_IMAGE_PROXY_REPO
      - DEV_NGINX_IMAGE_PROXY_TAG
    commands:
      - export HOSTNAME=$${DEV_HOSTNAME}
      - export COP_DATA_API_KUBE_NAMESPACE=$${DEV_COP_DATA_API_KUBE_NAMESPACE}
      - export KUBE_SERVER=$${DEV_KUBE_SERVER}
      - export KUBE_TOKEN=$${DEV_KUBE_TOKEN}
      - export KEYCLOAK_URL=$${DEV_KEYCLOAK_URL}
      - export KEYCLOAK_REALM=$${DEV_KEYCLOAK_REALM}
      - export KEYCLOAK_PROTOCOL=$${DEV_KEYCLOAK_PROTOCOL}
      - export COP_DATA_API_KEYCLOAK_CLIENT_ID=$${DEV_COP_DATA_API_KEYCLOAK_CLIENT_ID}
      - export COP_DATA_API_LOG_LEVEL=$${DEV_COP_DATA_API_LOG_LEVEL}
      - export COP_DATA_API_DB_CONNECTION_STRING=$${DEV_COP_DATA_API_DB_CONNECTION_STRING}
      - export COP_DATA_API_PORT=$${DEV_COP_DATA_API_PORT}
      - export DB_DATA_COP_OPERATION_SCHEMA=$${DEV_DB_DATA_COP_OPERATION_SCHEMA}
      - export COP_DATA_API_IMAGE_REPO=$${DEV_COP_DATA_API_IMAGE_REPO}
      - export NGINX_PROXY_IMAGE_REPO=$${DEV_NGINX_PROXY_IMAGE_REPO}
      - export NGINX_PROXY_IMAGE_TAG=$${DEV_NGINX_PROXY_IMAGE_TAG}
      - kd --insecure-skip-tls-verify -f kube/deployment.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml
    when:
      branch: master
      event: push

  deploy_to_staging:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - STAGING_HOSTNAME
      - STAGING_COP_DATA_API_KUBE_NAMESPACE
      - STAGING_KUBE_SERVER
      - STAGING_KUBE_TOKEN
      - STAGING_KEYCLOAK_URL
      - STAGING_KEYCLOAK_PROTOCOL
      - STAGING_KEYCLOAK_REALM
      - STAGING_COP_DATA_API_KEYCLOAK_CLIENT_ID
      - STAGING_COP_DATA_API_LOG_LEVEL
      - STAGING_COP_DATA_API_DB_CONNECTION_STRING
      - STAGING_DB_DATA_COP_OPERATION_SCHEMA
      - STAGING_COP_DATA_API_IMAGE_REPO
      - STAGING_COP_DATA_API_PORT
      - STAGING_NGINX_IMAGE_PROXY_REPO
      - STAGING_NGINX_IMAGE_PROXY_TAG
    commands:
      - export HOSTNAME=$${STAGING_HOSTNAME}
      - export COP_DATA_API_KUBE_NAMESPACE=$${STAGING_COP_DATA_API_KUBE_NAMESPACE}
      - export KUBE_SERVER=$${STAGING_KUBE_SERVER}
      - export KUBE_TOKEN=$${STAGING_KUBE_TOKEN}
      - export KEYCLOAK_URL=$${STAGING_KEYCLOAK_URL}
      - export KEYCLOAK_PROTOCOL=$${STAGING_KEYCLOAK_PROTOCOL}
      - export KEYCLOAK_REALM=$${STAGING_KEYCLOAK_REALM}
      - export COP_DATA_API_KEYCLOAK_CLIENT_ID=$${STAGING_COP_DATA_API_KEYCLOAK_CLIENT_ID}
      - export COP_DATA_API_LOG_LEVEL=$${STAGING_COP_DATA_API_LOG_LEVEL}
      - export COP_DATA_API_DB_CONNECTION_STRING=$${STAGING_COP_DATA_API_DB_CONNECTION_STRING}
      - export COP_DATA_API_PORT=$${STAGING_COP_DATA_API_PORT}
      - export DB_DATA_COP_OPERATION_SCHEMA=$${STAGING_DB_DATA_COP_OPERATION_SCHEMA}
      - export COP_DATA_API_IMAGE_REPO=$${STAGING_COP_DATA_API_IMAGE_REPO}
      - export NGINX_PROXY_IMAGE_REPO=$${STAGING_NGINX_PROXY_IMAGE_REPO}
      - export NGINX_PROXY_IMAGE_TAG=$${STAGING_NGINX_PROXY_IMAGE_TAG}
      - kd --insecure-skip-tls-verify -f kube/deployment.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml
    when:
      event: deployment
      environment: staging
      branch: master

  deploy_to_production:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - PRODUCTION_HOSTNAME
      - PRODUCTION_COP_DATA_API_KUBE_NAMESPACE
      - PRODUCTION_KUBE_SERVER
      - PRODUCTION_KUBE_TOKEN
      - PRODUCTION_KEYCLOAK_URL
      - PRODUCTION_KEYCLOAK_PROTOCOL
      - PRODUCTION_KEYCLOAK_REALM
      - PRODUCTION_COP_DATA_API_KEYCLOAK_CLIENT_ID
      - PRODUCTION_COP_DATA_API_LOG_LEVEL
      - PRODUCTION_COP_DATA_API_DB_CONNECTION_STRING
      - PRODUCTION_DB_DATA_COP_OPERATION_SCHEMA
      - PRODUCTION_COP_DATA_API_IMAGE_REPO
      - PRODUCTION_COP_DATA_API_PORT
      - PRODUCTION_NGINX_IMAGE_PROXY_REPO
      - PRODUCTION_NGINX_IMAGE_PROXY_TAG
    commands:
      - export HOSTNAME=$${PRODUCTION_HOSTNAME}
      - export COP_DATA_API_KUBE_NAMESPACE=$${PRODUCTION_COP_DATA_API_KUBE_NAMESPACE}
      - export KUBE_SERVER=$${PRODUCTION_KUBE_SERVER}
      - export KUBE_TOKEN=$${PRODUCTION_KUBE_TOKEN}
      - export KEYCLOAK_URL=$${PRODUCTION_KEYCLOAK_URL}
      - export KEYCLOAK_PROTOCOL=$${PRODUCTION_KEYCLOAK_PROTOCOL}
      - export KEYCLOAK_REALM=$${PRODUCTION_KEYCLOAK_REALM}
      - export COP_DATA_API_KEYCLOAK_CLIENT_ID=$${PRODUCTION_COP_DATA_API_KEYCLOAK_CLIENT_ID}
      - export COP_DATA_API_LOG_LEVEL=$${PRODUCTION_COP_DATA_API_LOG_LEVEL}
      - export COP_DATA_API_DB_CONNECTION_STRING=$${PRODUCTION_DB_CONNECTION_STRING}
      - export DB_DATA_COP_OPERATION_SCHEMA=$${PRODUCTION_DB_DATA_COP_OPERATION_SCHEMA}
      - export COP_DATA_API_PORT=$${PRODUCTION_COP_DATA_API_PORT}
      - export COP_DATA_API_IMAGE_REPO=$${PRODUCTION_COP_DATA_API_IMAGE_REPO}
      - export NGINX_PROXY_IMAGE_REPO=$${PRODUCTION_NGINX_PROXY_IMAGE_REPO}
      - export NGINX_PROXY_IMAGE_TAG=$${PRODUCTION_NGINX_PROXY_IMAGE_TAG}
      - kd --insecure-skip-tls-verify -f kube/deployment.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml
    when:
      event: deployment
      environment: production
      branch: master
